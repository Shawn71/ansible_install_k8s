- name: Extracting the cfssl.tar.gz to /usr/bin
  unarchive: src=cfssl.tar.gz dest=/usr/bin/ mode=a+x

- name: Preparing csr file for etcd
  template: src=etcd/server-csr.json.j2 dest=roles/tls/certs/etcd/server-csr.json	  

- name: Changing to the etcd cert file directory and generating etcd certificate files
  shell: |
    cd roles/tls/certs/etcd
    cfssl gencert -initca ca-csr.json | cfssljson -bare ca -
    cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=www server-csr.json | cfssljson -bare server

- name: Preparing csr file for kubernetes
  template: src=kubernetes/{{ item.src }} dest=roles/tls/certs/kubernetes/{{ item.dest }}
  with_items:
    - { src: admin-csr.json.j2, dest: admin-csr.json }
    - { src: kube-proxy-csr.json.j2, dest: kube-proxy-csr.json }
    - { src: server-csr.json.j2, dest: server-csr.json }

- name: Changing to kubernetes cert file directory and generating kubernetes certificate
  shell: |
    cd roles/tls/certs/kubernetes/
    cfssl gencert -initca ca-csr.json | cfssljson -bare ca -
    cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=kubernetes server-csr.json | cfssljson -bare server
    cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=kubernetes admin-csr.json | cfssljson -bare admin
    cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=kubernetes kube-proxy-csr.json | cfssljson -bare kube-proxy
